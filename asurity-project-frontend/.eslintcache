[{"/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/index.tsx":"1","/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/reportWebVitals.ts":"2","/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/App.tsx":"3","/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/ContactRow.tsx":"4","/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/ContactGrid.tsx":"5","/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/ContactForm.tsx":"6","/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/SortButton.tsx":"7","/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/ContactFormNew.tsx":"8","/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/formInputs/TextInput.tsx":"9","/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/Constants.tsx":"10"},{"size":519,"mtime":1611023016696,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1610842611000,"results":"13","hashOfConfig":"12"},{"size":3075,"mtime":1611032400445,"results":"14","hashOfConfig":"12"},{"size":1015,"mtime":1611024943859,"results":"15","hashOfConfig":"12"},{"size":1394,"mtime":1611025237073,"results":"16","hashOfConfig":"12"},{"size":5034,"mtime":1610946974109,"results":"17","hashOfConfig":"12"},{"size":169,"mtime":1610933703670,"results":"18","hashOfConfig":"12"},{"size":3920,"mtime":1611009881519,"results":"19","hashOfConfig":"12"},{"size":639,"mtime":1611008930613,"results":"20","hashOfConfig":"12"},{"size":75,"mtime":1611009659424,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1at9pn4",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/index.tsx",[],["45","46"],"/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/reportWebVitals.ts",[],"/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/App.tsx",[],"/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/ContactRow.tsx",["47","48","49"],"import { Row, Col } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\nimport '../styling/ContactRow.css';\n\ninterface RowProps {\n    contact: Contact;\n}\n\ninterface Contact {\nid: number,\nfirstName: string,\nlastName: string,\nemail: string,\nphoneNumber: string,\nstreetAddress: string,\ncity: string,\nstate: string,\nzipcode: string,\ncontactFrequency: number,\ncontactMethod: number\n}\n\nconst ContactRow: React.FC<RowProps> = (props) => {\n\n    return (\n        <div className=\"Contact-Row\">\n            <div className=\"Column-Name First-Name\">{props.contact.firstName}</div>\n            <div className=\"Last-Name\">{props.contact.lastName}</div>\n            <div className=\"City\">{props.contact.city}</div>\n            <div className=\"State\">{props.contact.state}</div>\n            <div className=\"Phone-Number\">{props.contact.phoneNumber}</div>\n            <div className=\"button-container\">\n                <button>Edit</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ContactRow;","/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/ContactGrid.tsx",["50"],"import React from 'react';\nimport ContactRow from './ContactRow';\nimport SortButton from './SortButton';\nimport '../styling/ContactGrid.css';\nimport '../styling/ContactRow.css';\n//import Contact from './App';\n\ninterface GridProps {\n    contacts: Contact[];\n}\ninterface Contact {\nid: number,\nfirstName: string,\nlastName: string,\nemail: string,\nphoneNumber: string,\nstreetAddress: string,\ncity: string,\nstate: string,\nzipcode: string,\ncontactFrequency: number,\ncontactMethod: number\n}\n\n//type Contact = Readonly<{\n//id: number\n//}>\n\nclass ContactGrid extends React.Component<GridProps> {\n    constructor(props: GridProps){\n        super(props);\n    }\n\n    \n    render () {\n        const contacts = this.props.contacts;\n\n        return(\n            <div className=\"Grid-Outline\">\n                <div className=\"Column-Titles\">\n                    <div className=\"Column-Name\">First Name <SortButton /> </div>\n                    <div className=\"Column-Name\">Last Name <SortButton /> </div>\n                    <div className=\"Column-Name\">City <SortButton /> </div>\n                    <div className=\"Column-Name\">State <SortButton /> </div>\n                    <div className=\"Column-Name\">Phone Number</div>\n                </div>\n                {contacts.map(contact => <ContactRow key={contact.id} contact={contact}/>)}\n            </div>\n        )\n    }\n    \n}\n\nexport default ContactGrid;","/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/ContactForm.tsx",["51","52","53","54"],"/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/SortButton.tsx",[],"/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/ContactFormNew.tsx",[],"/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/components/formInputs/TextInput.tsx",[],"/Users/andrewrivera/development/asurity/asurity-coding-project/asurity-project-frontend/src/Constants.tsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":10,"nodeType":"61","messageId":"62","endLine":1,"endColumn":13},{"ruleId":"59","severity":1,"message":"63","line":1,"column":15,"nodeType":"61","messageId":"62","endLine":1,"endColumn":18},{"ruleId":"59","severity":1,"message":"64","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":30,"column":5,"nodeType":"67","messageId":"68","endLine":32,"endColumn":6},{"ruleId":"59","severity":1,"message":"69","line":27,"column":7,"nodeType":"61","messageId":"62","endLine":27,"endColumn":52},{"ruleId":"59","severity":1,"message":"70","line":28,"column":7,"nodeType":"61","messageId":"62","endLine":28,"endColumn":49},{"ruleId":"59","severity":1,"message":"71","line":29,"column":7,"nodeType":"61","messageId":"62","endLine":29,"endColumn":39},{"ruleId":"59","severity":1,"message":"72","line":57,"column":7,"nodeType":"61","messageId":"62","endLine":57,"endColumn":15},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Container' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'contactMethodValues' is assigned a value but never used.","'contactFrequencyValues' is assigned a value but never used.","'usStateDropdownValues' is assigned a value but never used.","'validate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]